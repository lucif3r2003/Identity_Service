plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.identity'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    
    //crypt
    implementation 'org.springframework.security:spring-security-crypto'

    //MapStruct
    implementation 'org.mapstruct:mapstruct:1.6.2'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'

    //Lombok mapstruct binding
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.30.1'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
}
// Config annotation processing
tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs += [
        '-Amapstruct.suppressGeneratorTimestamp=true', // Optional: bỏ timestamp trong generated code
        '-Amapstruct.suppressGeneratorVersionInfo=true', // Optional: bỏ version info
        '-Amapstruct.defaultComponentModel=spring' // Dùng Spring component model cho MapStruct
    ]
}
tasks.named('test') {
	useJUnitPlatform()
}

